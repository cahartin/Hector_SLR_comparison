#dh/dt = b[T(t) -Te(t)]+phi(t)
#DTe/dt = [T(t)-Te(t)]/p1
#dphi/dt = -phi/p2
# created by M.Sarofim
# additional edits C. Hartin
# 5/11/2021
#############################################
library(ggplot2)
library(dplyr)
library(tidyr)
phicalc <- function(phi0, p2, numyears)
{
t <- 1:numyears
y1 <- phi0 * exp(-t/p2)
return(y1)
}
equiltempcalc <- function(equiltemp0, p1, temp)
{
y1 <- numeric(numyears)
for(t in 1:numyears)
{
ifelse(t == 1,
y1[t] <- equiltemp0,
y1[t] <- y1[t-1]+(temp[t]-y1[t-1])/p1)
}
return(y1)
}
sealevelcalc <- function(bscalar, equiltemp, phi, temp)
{
y1 <- numeric(numyears)
for(t in 1:numyears)
{
ifelse(t==1,
y1[t] <- 0,
y1[t] <- y1[t-1]+bscalar*(temp[t]-equiltemp[t])+phi[t])
}
return(y1)
}
####
# read in the temperature trajectory from Hector rcp26 scenario
#tempscen <- read.csv("tempexample.csv", header=TRUE)
tempscen <- read.csv("sample_outputstream_rcp26.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "Tgav") %>%
rename("temperature" = "value") %>%
select(year, temperature)
numyears <- length(tempscen$year)
phi0 <- 0.01 #mm/year: multi-millenial contribution.
#Kopp: "order 0.1 mm/y in 2000 CE"
bscalar <- 3.5 #scalar: sensitivity of sea level to temperature difference
#Kopp: eyeballing mode from Figure S5 for "a"
p1 <- 140 #timescale: how quickly does equilibrium temp reach current temp
#Kopp: eyeballing mode from FIgure S5 for "tau"
p2 <- 300 #timescale: e-folding decay rate for phi
#Kopp: eyeballing mode for "tau-c"
equiltemp0 <- tempscen$temperature[1] - 0.5 #initial equiltemp
tempscen$equiltemp <- equiltempcalc(equiltemp0, p1, tempscen$temperature)
tempscen$phi <- phicalc(phi0, p2, numyears)
tempscen$sealevel <- sealevelcalc(bscalar, tempscen$equiltemp, tempscen$phi,
tempscen$temperature)
#################
#Read in historical observations (mm)
obs <- read.csv("CSIRO_Recons_gmsl_yr_2015.csv", sep = ",") %>%
rename("SLR" = "GMSL..mm.") %>%
rename("Error" = "GMSL.uncertainty..mm.") %>%
rename("year" = "Time") %>%
mutate(run_name = "observations")
# combine observations and model output
semi_emp <- rename(tempscen, "SLR" = "sealevel") %>% # so we can match observations column name
mutate(run_name = "semi-empirical") %>%
select(year, SLR, run_name)
#average SLR from 1990 as a baseline
avg <- as.numeric(summarise(filter(semi_emp, year %in% 1990), SLR = mean(SLR)))
SM <- mutate(semi_emp, SLR = SLR - avg)
# join together observations and semi_empirical data
df1 <- full_join(obs, SM)
# Import Hector data for comparison
# cm units convert to mm
rcp26 <- read.csv("sample_outputstream_rcp26.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "slr") %>%
rename("SLR" = "value") %>%
mutate(SLR = SLR*10) #convert to mm
#average SLR from 1990 as a baseline
avg <- as.numeric(summarise(filter(rcp26, year %in% 1990), SLR = mean(SLR)))
hector <- mutate(rcp26, SLR = SLR - avg)
###### join in the dataframes (semi-emp, hector, observations)
df2 <- full_join(df1, hector) %>%
select(-variable, -spinup, -units)
ggplot(df2, aes(x=year, y=SLR, color = run_name)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=SLR-Error, ymax=SLR+Error)) +
xlim(1850,2110)+
ylim(-250,550)+
ggtitle("SLR relative to 1990 in mm")
# Process CMIP data for SLR from
# CH 5/31/2021
library(ncdf4)
year <- 2006:2099
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp126_GMSLR_mid.nc")
gmslr_mid <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP126_mid") %>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp126_GMSLR_lower.nc")
gmslr_lower <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP126_lower")%>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp126_GMSLR_upper.nc")
gmslr_upper <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP126_upper")%>%
cbind(year)
gmslr_ssp126 <- rbind(gmslr_mid, gmslr_lower, gmslr_upper)
####
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp245_GMSLR_mid.nc")
gmslr_mid <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP245_mid") %>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp245_GMSLR_lower.nc")
gmslr_lower <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP245_lower")%>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp245_GMSLR_upper.nc")
gmslr_upper <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP245_upper")%>%
cbind(year)
gmslr_ssp245 <- rbind(gmslr_mid, gmslr_lower, gmslr_upper)
######
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp585_GMSLR_mid.nc")
gmslr_mid <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP585_mid") %>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp585_GMSLR_lower.nc")
gmslr_lower <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP585_lower")%>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp585_GMSLR_upper.nc")
gmslr_upper <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP585_upper")%>%
cbind(year)
gmslr_ssp585 <- rbind(gmslr_mid, gmslr_lower, gmslr_upper)
gmslr <- rbind(gmslr_ssp126, gmslr_ssp245, gmslr_ssp585) %>%
mutate(model = "CMIP")
# Script to compare Kopps semi-empirical SLR code
# https://www.pnas.org/content/113/11/E1434
# to projections of SLR from CMIP5/6 from
# https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2020GL092064
# C.Hartin & M.Sarofim
# 5/14/2021
library(ggplot2)
library(dplyr)
library(tidyr)
### Run Kopp SLR code
# modify output to compare to CMIP
# RCP 45
# reading in the temperature trajectory from Hector rcp26 scenario
tempscen <- read.csv("sample_outputstream_rcp26.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "Tgav") %>%
rename("temperature" = "value") %>%
select(year, temperature)
equiltemp0 <- tempscen$temperature[1] - 0.5 #initial equiltemp
numyears <- length(tempscen$year)
tempscen$equiltemp <- equiltempcalc(equiltemp0, p1, tempscen$temperature)
tempscen$phi <- phicalc(phi0, p2, numyears)
tempscen$sealevel <- sealevelcalc(bscalar, tempscen$equiltemp, tempscen$phi,
tempscen$temperature)
tempscen_rcp26 <- tempscen %>%
mutate(run_name = "SE_rcp26")
avg <- as.numeric(summarise(filter(tempscen_rcp26, year %in% c(1986:2005)), SLR = mean(sealevel)))
tempscen_rcp26 <- mutate(tempscen_rcp26, SLR = sealevel - avg)
######
# RCP 45
#tempscen <- read.csv("tempexample.csv", header=TRUE)
# reading in the temperature trajectory from Hector rcp26 scenario
tempscen <- read.csv("sample_outputstream_rcp45.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "Tgav") %>%
rename("temperature" = "value") %>%
select(year, temperature)
equiltemp0 <- tempscen$temperature[1] - 0.5 #initial equiltemp
numyears <- length(tempscen$year)
tempscen$equiltemp <- equiltempcalc(equiltemp0, p1, tempscen$temperature)
tempscen$phi <- phicalc(phi0, p2, numyears)
tempscen$sealevel <- sealevelcalc(bscalar, tempscen$equiltemp, tempscen$phi,
tempscen$temperature)
tempscen_rcp45 <- tempscen %>%
mutate(run_name = "SE_rcp45")
avg <- as.numeric(summarise(filter(tempscen_rcp45, year %in% c(1986:2005)), SLR = mean(sealevel)))
tempscen_rcp45 <- mutate(tempscen_rcp45, SLR = sealevel - avg)
######
# RCP 85
#tempscen <- read.csv("tempexample.csv", header=TRUE)
# reading in the temperature trajectory from Hector rcp85 scenario
tempscen <- read.csv("sample_outputstream_rcp85.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "Tgav") %>%
rename("temperature" = "value") %>%
select(year, temperature)
equiltemp0 <- tempscen$temperature[1] - 0.5 #initial equiltemp
numyears <- length(tempscen$year)
tempscen$equiltemp <- equiltempcalc(equiltemp0, p1, tempscen$temperature)
tempscen$phi <- phicalc(phi0, p2, numyears)
tempscen$sealevel <- sealevelcalc(bscalar, tempscen$equiltemp, tempscen$phi,
tempscen$temperature)
tempscen_rcp85 <- tempscen %>%
mutate(run_name = "SE_rcp85")
avg <- as.numeric(summarise(filter(tempscen_rcp85, year %in% c(1986:2005)), SLR = mean(sealevel)))
tempscen_rcp85 <- mutate(tempscen_rcp85, SLR = sealevel - avg)
se_slr <- rbind(tempscen_rcp26, tempscen_rcp45, tempscen_rcp85) %>%
select(-equiltemp, -phi) %>%
rename("value" = "SLR") %>%
mutate(value = value/1000) %>%
filter(year<2100) %>%
mutate(model = "SE")
###
# Run the processed projections
x<- full_join(se_slr, gmslr)
ggplot(x, aes(year, value, color=run_name)) +
geom_line() +
geom_point(data = filter(x, run_name %in% c("SE_rcp26", "SE_rcp45", "SE_rcp85"))) +
xlim(2000,2100) +
ylab("gmslr in meters")
# Rcode to implement Kopp 2016 sea level rise semi-empirical projections
# currently uses only a single value of each parameter, rather than an uncertain distribution
# unclear where to set initial equilibrium temperature...
# https://www.pnas.org/content/113/11/E1434
#dh/dt = b[T(t) -Te(t)]+phi(t)
#DTe/dt = [T(t)-Te(t)]/p1
#dphi/dt = -phi/p2
# created by M.Sarofim
# additional edits C. Hartin
# 5/11/2021
#############################################
library(ggplot2)
library(dplyr)
library(tidyr)
phicalc <- function(phi0, p2, numyears)
{
t <- 1:numyears
y1 <- phi0 * exp(-t/p2)
return(y1)
}
equiltempcalc <- function(equiltemp0, p1, temp)
{
y1 <- numeric(numyears)
for(t in 1:numyears)
{
ifelse(t == 1,
y1[t] <- equiltemp0,
y1[t] <- y1[t-1]+(temp[t]-y1[t-1])/p1)
}
return(y1)
}
sealevelcalc <- function(bscalar, equiltemp, phi, temp)
{
y1 <- numeric(numyears)
for(t in 1:numyears)
{
ifelse(t==1,
y1[t] <- 0,
y1[t] <- y1[t-1]+bscalar*(temp[t]-equiltemp[t])+phi[t])
}
return(y1)
}
####
# read in the temperature trajectory from Hector rcp26 scenario
#tempscen <- read.csv("tempexample.csv", header=TRUE)
tempscen <- read.csv("sample_outputstream_rcp26.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "Tgav") %>%
rename("temperature" = "value") %>%
select(year, temperature)
numyears <- length(tempscen$year)
phi0 <- 0.01 #mm/year: multi-millenial contribution.
#Kopp: "order 0.1 mm/y in 2000 CE"
bscalar <- 3.5 #scalar: sensitivity of sea level to temperature difference
#Kopp: eyeballing mode from Figure S5 for "a"
p1 <- 140 #timescale: how quickly does equilibrium temp reach current temp
#Kopp: eyeballing mode from FIgure S5 for "tau"
p2 <- 300 #timescale: e-folding decay rate for phi
#Kopp: eyeballing mode for "tau-c"
equiltemp0 <- tempscen$temperature[1] - 0.5 #initial equiltemp
tempscen$equiltemp <- equiltempcalc(equiltemp0, p1, tempscen$temperature)
tempscen$phi <- phicalc(phi0, p2, numyears)
tempscen$sealevel <- sealevelcalc(bscalar, tempscen$equiltemp, tempscen$phi,
tempscen$temperature)
#################
#Read in historical observations (mm)
obs <- read.csv("CSIRO_Recons_gmsl_yr_2015.csv", sep = ",") %>%
rename("SLR" = "GMSL..mm.") %>%
rename("Error" = "GMSL.uncertainty..mm.") %>%
rename("year" = "Time") %>%
mutate(run_name = "observations")
# combine observations and model output
semi_emp <- rename(tempscen, "SLR" = "sealevel") %>% # so we can match observations column name
mutate(run_name = "semi-empirical") %>%
select(year, SLR, run_name)
#average SLR from 1990 as a baseline
avg <- as.numeric(summarise(filter(semi_emp, year %in% 1990), SLR = mean(SLR)))
SM <- mutate(semi_emp, SLR = SLR - avg)
# join together observations and semi_empirical data
df1 <- full_join(obs, SM)
# Import Hector data for comparison
# cm units convert to mm
rcp26 <- read.csv("sample_outputstream_rcp26.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "slr") %>%
rename("SLR" = "value") %>%
mutate(SLR = SLR*10) #convert to mm
#average SLR from 1990 as a baseline
avg <- as.numeric(summarise(filter(rcp26, year %in% 1990), SLR = mean(SLR)))
hector <- mutate(rcp26, SLR = SLR - avg)
###### join in the dataframes (semi-emp, hector, observations)
df2 <- full_join(df1, hector) %>%
select(-variable, -spinup, -units)
ggplot(df2, aes(x=year, y=SLR, color = run_name)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=SLR-Error, ymax=SLR+Error)) +
xlim(1850,2110)+
ylim(-250,550)+
ggtitle("SLR relative to 1990 in mm")
# Step 2 in SLR script
# Process CMIP data for SLR from
# https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2020GL092064
# Data located:
# https://data.4tu.nl/articles/dataset/Supporting_data_for_Projecting_Global_Mean_Sea-Level_Change_Using_CMIP6_Models/12958079
# C.Hartin 5/31/2021
library(ncdf4)
year <- 2006:2099
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp126_GMSLR_mid.nc")
gmslr_mid <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP126_mid") %>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp126_GMSLR_lower.nc")
gmslr_lower <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP126_lower")%>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp126_GMSLR_upper.nc")
gmslr_upper <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP126_upper")%>%
cbind(year)
gmslr_ssp126 <- rbind(gmslr_mid, gmslr_lower, gmslr_upper)
####
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp245_GMSLR_mid.nc")
gmslr_mid <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP245_mid") %>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp245_GMSLR_lower.nc")
gmslr_lower <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP245_lower")%>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp245_GMSLR_upper.nc")
gmslr_upper <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP245_upper")%>%
cbind(year)
gmslr_ssp245 <- rbind(gmslr_mid, gmslr_lower, gmslr_upper)
######
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp585_GMSLR_mid.nc")
gmslr_mid <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP585_mid") %>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp585_GMSLR_lower.nc")
gmslr_lower <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP585_lower")%>%
cbind(year)
nc <- nc_open("CMIP_SLR/Data/cmip6_mc_projections/ssp585_GMSLR_upper.nc")
gmslr_upper <- ncvar_get(nc, var="GMSLR") %>%
as.data.frame() %>%
rename("value" = ".") %>%
mutate(run_name = "SSP585_upper")%>%
cbind(year)
gmslr_ssp585 <- rbind(gmslr_mid, gmslr_lower, gmslr_upper)
gmslr <- rbind(gmslr_ssp126, gmslr_ssp245, gmslr_ssp585) %>%
mutate(model = "CMIP")
# Script to compare Kopps semi-empirical SLR code
# https://www.pnas.org/content/113/11/E1434
# to projections of SLR from CMIP5/6 from
# https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2020GL092064
# C.Hartin & M.Sarofim
# 5/14/2021
library(ggplot2)
library(dplyr)
library(tidyr)
### Run Kopp SLR code
# modify output to compare to CMIP
# RCP 45
# reading in the temperature trajectory from Hector rcp26 scenario
tempscen <- read.csv("sample_outputstream_rcp26.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "Tgav") %>%
rename("temperature" = "value") %>%
select(year, temperature)
equiltemp0 <- tempscen$temperature[1] - 0.5 #initial equiltemp
numyears <- length(tempscen$year)
tempscen$equiltemp <- equiltempcalc(equiltemp0, p1, tempscen$temperature)
tempscen$phi <- phicalc(phi0, p2, numyears)
tempscen$sealevel <- sealevelcalc(bscalar, tempscen$equiltemp, tempscen$phi,
tempscen$temperature)
tempscen_rcp26 <- tempscen %>%
mutate(run_name = "SE_rcp26")
avg <- as.numeric(summarise(filter(tempscen_rcp26, year %in% c(1986:2005)), SLR = mean(sealevel)))
tempscen_rcp26 <- mutate(tempscen_rcp26, SLR = sealevel - avg)
######
# RCP 45
#tempscen <- read.csv("tempexample.csv", header=TRUE)
# reading in the temperature trajectory from Hector rcp26 scenario
tempscen <- read.csv("sample_outputstream_rcp45.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "Tgav") %>%
rename("temperature" = "value") %>%
select(year, temperature)
equiltemp0 <- tempscen$temperature[1] - 0.5 #initial equiltemp
numyears <- length(tempscen$year)
tempscen$equiltemp <- equiltempcalc(equiltemp0, p1, tempscen$temperature)
tempscen$phi <- phicalc(phi0, p2, numyears)
tempscen$sealevel <- sealevelcalc(bscalar, tempscen$equiltemp, tempscen$phi,
tempscen$temperature)
tempscen_rcp45 <- tempscen %>%
mutate(run_name = "SE_rcp45")
avg <- as.numeric(summarise(filter(tempscen_rcp45, year %in% c(1986:2005)), SLR = mean(sealevel)))
tempscen_rcp45 <- mutate(tempscen_rcp45, SLR = sealevel - avg)
######
# RCP 85
#tempscen <- read.csv("tempexample.csv", header=TRUE)
# reading in the temperature trajectory from Hector rcp85 scenario
tempscen <- read.csv("sample_outputstream_rcp85.csv", sep = ",", skip = 1) %>%
select(-component) %>%
filter(year > 1849) %>%
filter(variable == "Tgav") %>%
rename("temperature" = "value") %>%
select(year, temperature)
equiltemp0 <- tempscen$temperature[1] - 0.5 #initial equiltemp
numyears <- length(tempscen$year)
tempscen$equiltemp <- equiltempcalc(equiltemp0, p1, tempscen$temperature)
tempscen$phi <- phicalc(phi0, p2, numyears)
tempscen$sealevel <- sealevelcalc(bscalar, tempscen$equiltemp, tempscen$phi,
tempscen$temperature)
tempscen_rcp85 <- tempscen %>%
mutate(run_name = "SE_rcp85")
avg <- as.numeric(summarise(filter(tempscen_rcp85, year %in% c(1986:2005)), SLR = mean(sealevel)))
tempscen_rcp85 <- mutate(tempscen_rcp85, SLR = sealevel - avg)
se_slr <- rbind(tempscen_rcp26, tempscen_rcp45, tempscen_rcp85) %>%
select(-equiltemp, -phi) %>%
rename("value" = "SLR") %>%
mutate(value = value/1000) %>%
filter(year<2100) %>%
mutate(model = "SE")
###
# Run the processed projections
x<- full_join(se_slr, gmslr)
ggplot(x, aes(year, value, color=run_name)) +
geom_line() +
geom_point(data = filter(x, run_name %in% c("SE_rcp26", "SE_rcp45", "SE_rcp85"))) +
xlim(2000,2100) +
ylab("gmslr in meters")
x<- full_join(se_slr, gmslr)
ggplot(x, aes(year, value, color=run_name)) +
geom_line() +
geom_point(data = filter(x, run_name %in% c("SE_rcp26", "SE_rcp45", "SE_rcp85"))) +
xlim(2000,2100) +
ylab("gmslr in meters")
ggplot(x, aes(year, value, color=run_name)) +
geom_line() +
geom_point(data = filter(x, run_name %in% c("SE_rcp26", "SE_rcp45", "SE_rcp85"))) +
xlim(2000,2100) +
ylab("gmslr in meters")+
ggtitle("GMSLR (m) semi-emp compared to CMIP")
